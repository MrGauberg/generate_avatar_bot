volumes:
  pg_data:
  static:
  media:
  redis_data:

services:
  db:
    image: postgres:13
    env_file: .env
    volumes:
      - pg_data:/var/lib/postgresql/data

  backend:
    build: ./backend/
    entrypoint: sh entrypoint.sh
    env_file: .env
    depends_on:
      - db
    volumes:
      - media:/app/media/
      - static:/app/staticfiles/
    environment:
      DJANGO_SETTINGS_MODULE: core.settings
      PYTHONPATH: /app
    command: ["make", "start"]

  nginx:
    build: ./nginx/
    env_file: .env
    ports:
      - "8080:80"
    volumes:
      - static:/staticfiles/
      - media:/media/
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - /etc/letsencrypt/live/avatar-service.ddns.net:/etc/letsencrypt/live/avatar-service.ddns.net:ro
      - /etc/letsencrypt/archive/avatar-service.ddns.net:/etc/letsencrypt/archive/avatar-service.ddns.net:ro
      - /etc/letsencrypt/privkey.pem:/etc/letsencrypt/privkey.pem:ro
    depends_on:
      - backend

  redis:
    image: "redis:6.2-alpine"
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --save 60 1 --loglevel warning


  celery:
    build:
      context: ./backend/
    # entrypoint: sh entrypoint.sh
    env_file: .env
    command: celery -A core worker --loglevel=info
    volumes:
      - ./backend/:/app
    depends_on:
      - redis
      - db
    environment:
      DJANGO_SETTINGS_MODULE: core.settings
      PYTHONPATH: /app
    restart: always

  celery_beat:
    build:
      context: ./backend/
    # entrypoint: sh entrypoint.sh
    env_file: .env
    command: celery -A core beat --loglevel=info
    volumes:
      - ./backend/:/app
    depends_on:
      - redis
      - db
    environment:
      DJANGO_SETTINGS_MODULE: core.settings
      PYTHONPATH: /app
    restart: always
