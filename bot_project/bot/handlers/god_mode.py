# bot/handlers/god_mode.py

from aiogram import Router, types
from bot.services.api_client import api_client
from bot.keyboards.inline import god_mode_keyboard

router = Router()
enabled_users = set()  # –•—Ä–∞–Ω–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã–º —Ä–µ–∂–∏–º–æ–º "–ë–æ–≥–∞"


@router.callback_query(lambda c: c.data == "menu_god_mode")
async def god_mode_menu_callback(callback: types.CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ '–†–µ–∂–∏–º –ë–æ–≥–∞'"""
    await callback.message.edit_text(
        "üîÆ –•–æ—á–µ—à—å –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∂–∏–º '–ë–æ–≥–∞'? –û–Ω –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ —Ç–µ–∫—Å—Ç—É!",
        reply_markup=god_mode_keyboard()
    )
    await callback.answer()


@router.callback_query(lambda c: c.data == "godmode_enable")
async def enable_god_mode_callback(callback: types.CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–∫–ª—é—á–µ–Ω–∏—è —Ä–µ–∂–∏–º–∞ '–ë–æ–≥–∞'"""
    try:
        await api_client.enable_god_mode()
        enabled_users.add(callback.from_user.id)  # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö
        await callback.message.edit_text("‚úÖ –†–µ–∂–∏–º '–ë–æ–≥–∞' –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω! –¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏.")
    except Exception as e:
        await callback.message.edit_text(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–∫–ª—é—á–µ–Ω–∏–∏ —Ä–µ–∂–∏–º–∞ '–ë–æ–≥–∞': {e}")

    await callback.answer()


@router.callback_query(lambda c: c.data == "godmode_disable")
async def disable_god_mode_callback(callback: types.CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–∫–ª—é—á–µ–Ω–∏—è —Ä–µ–∂–∏–º–∞ '–ë–æ–≥–∞'"""
    try:
        await api_client.disable_god_mode()
        enabled_users.discard(callback.from_user.id)  # –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö
        await callback.message.edit_text("‚ùå –†–µ–∂–∏–º '–ë–æ–≥–∞' –≤—ã–∫–ª—é—á–µ–Ω.")
    except Exception as e:
        await callback.message.edit_text(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∫–ª—é—á–µ–Ω–∏–∏ —Ä–µ–∂–∏–º–∞ '–ë–æ–≥–∞': {e}")

    await callback.answer()


@router.message(lambda message: message.text and message.from_user.id in enabled_users)
async def generate_image_in_god_mode(message: types.Message):
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–º—É –æ–ø–∏—Å–∞–Ω–∏—é –≤ —Ä–µ–∂–∏–º–µ '–ë–æ–≥–∞'"""
    try:
        response = await api_client.generate_user_image(prompt=message.text, model_id=1)
        image_url = response.get("image_url")

        if image_url:
            await message.answer_photo(photo=image_url, caption="‚ú® –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ!")
        else:
            await message.answer("‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è.")
    except Exception as e:
        await message.answer(f"‚ùå –û—à–∏–±–∫–∞: {e}")
