# bot/handlers/start.py

from aiogram import Router, types
from aiogram.filters import Command
from bot.keyboards.inline import start_keyboard
from bot.handlers.generation import generate_menu_callback
from bot.handlers.god_mode import god_mode_menu_callback
from bot.handlers.settings import settings_menu_callback
from bot.handlers.support import support_callback_handler

from bot.utils.logger import logger
from bot.services.api_client import api_client
from bot.keyboards.reply import main_menu_keyboard

router = Router()

@router.message(Command("start"))
async def start_handler(message: types.Message):
    """–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"""
    user_id = message.from_user.id

    try:
        user_data = await api_client.get_user_profile(user_id)
        if user_data.get("is_authorized"):
            await message.answer(
                "üëã –ü—Ä–∏–≤–µ—Ç! –†–∞–¥ –≤–∏–¥–µ—Ç—å —Ç–µ–±—è —Å–Ω–æ–≤–∞!\n\n"
                "–í—ã–±–µ—Ä–∏, —á—Ç–æ —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å —Å–µ–≥–æ–¥–Ω—è: —Å–æ–∑–¥–∞—Ç—å –∞–≤–∞—Ç–∞—Ä, –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Ä–µ–∂–∏–º '–ë–æ–≥–∞' –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ—ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å —Å –≥–µ–Ω–µ—Ä–∞—Ü–∏–µ–π –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π!",
                reply_markup=main_menu_keyboard()
            )
            return

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {e}")

    await message.answer(
        "üëã –ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞!\n\n"
        "üé® –ó–¥–µ—Å—å —Ç—ã —Å–º–æ–∂–µ—à—å —Å–æ–∑–¥–∞—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∞–≤–∞—Ç–∞—Ä –ø–æ —Å–≤–æ–∏–º —Ñ–æ—Ç–æ –∏ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Ä–∞–∑–Ω—ã—Ö —Å—Ç–∏–ª—è—Ö!\n\n"
        "üîπ **–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?**\n"
        "1Ô∏è‚É£ –ó–∞–≥—Ä—É–∑–∏ 10 —Å–≤–æ–∏—Ö —Ñ–æ—Ç–æ\n"
        "2Ô∏è‚É£ –í—ã–±–µ—Ä–∏ —Å—Ç–∏–ª—å –∏–ª–∏ –æ–ø–∏—à–∏ –∫–∞—Ä—Ç–∏–Ω–∫—É —Ç–µ–∫—Å—Ç–æ–º (—Ä–µ–∂–∏–º '–ë–æ–≥–∞')\n"
        "3Ô∏è‚É£ –ü–æ–ª—É—á–∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è!\n\n"
        "üí° –ì–æ—Ç–æ–≤ –Ω–∞—á–∞—Ç—å? –í—ã–±–µ—Ä–∏ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –Ω–∏–∂–µ:",
        reply_markup=start_keyboard()
    )


@router.message(lambda message: message.text == "üé® –°—Ç–∏–ª–∏")
async def styles_button_handler(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ '–°—Ç–∏–ª–∏'"""
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∏–ª—å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π.")
    await generate_menu_callback(message)  # –ü–µ—Ä–µ—Ö–æ–¥ –≤ –≤—ã–±–æ—Ä —Å—Ç–∏–ª–µ–π


@router.message(lambda message: message.text == "üîÆ –†–µ–∂–∏–º –ë–æ–≥–∞")
async def god_mode_button_handler(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ '–†–µ–∂–∏–º –ë–æ–≥–∞'"""
    await god_mode_menu_callback(message)



@router.message(lambda message: message.text == "‚öô –ù–∞—Å—Ç—Ä–æ–π–∫–∏")
async def settings_button_handler(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ '–ù–∞—Å—Ç—Ä–æ–π–∫–∏'"""
    await settings_menu_callback(message)



@router.message(lambda message: message.text == "üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞")
async def support_button_handler(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ '–ü–æ–¥–¥–µ—Ä–∂–∫–∞'"""
    await support_callback_handler(message)




