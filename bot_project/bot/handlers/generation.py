# bot/handlers/generation.py

from aiogram import Router, types
from aiogram.filters import Command
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from bot.services.api_client import api_client

router = Router()


async def get_styles_keyboard():
    """–°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å–æ —Å—Ç–∏–ª—è–º–∏"""
    styles = await api_client.get_styles_list()

    buttons = [
        [InlineKeyboardButton(text=style["name"], callback_data=f"generate_{style['id']}")]
        for style in styles
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)


@router.message(Command("generate"))
async def generate_command_handler(message: types.Message):
    """–ö–æ–º–∞–Ω–¥–∞ /generate –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å—Ç–∏–ª—è –ø–µ—Ä–µ–¥ –≥–µ–Ω–µ—Ä–∞—Ü–∏–µ–π"""
    keyboard = await get_styles_keyboard()
    await message.answer("üé® –í—ã–±–µ—Ä–∏ —Å—Ç–∏–ª—å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:", reply_markup=keyboard)


@router.callback_query(lambda c: c.data.startswith("generate_"))
async def generate_image(callback_query: types.CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Å—Ç–∏–ª—è –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
    style_id = callback_query.data.split("_")[1]

    await callback_query.message.edit_text("‚è≥ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...")

    try:
        response = await api_client.generate_user_image(prompt="", model_id=int(style_id))
        image_url = response.get("image_url")

        if image_url:
            await callback_query.message.answer_photo(photo=image_url, caption="‚ú® –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ!")
        else:
            await callback_query.message.answer("‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è.")
    except Exception as e:
        await callback_query.message.answer(f"‚ùå –û—à–∏–±–∫–∞: {e}")
