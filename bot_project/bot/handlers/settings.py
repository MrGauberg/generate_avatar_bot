# bot/handlers/settings.py

from aiogram import Router, types
from bot.services.api_client import api_client
from bot.keyboards.inline import photo_format_keyboard, settings_menu_keyboard

router = Router()


@router.callback_query(lambda c: c.data == "menu_settings")
@router.message(lambda message: message.text == "‚öô –ù–∞—Å—Ç—Ä–æ–π–∫–∏")
async def settings_menu_callback(event: types.Message | types.CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ù–∞—Å—Ç—Ä–æ–π–∫–∏'"""
    if isinstance(event, types.CallbackQuery):
        message = event.message
    else:
        message = event

    await message.answer("‚öô –í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:", reply_markup=settings_menu_keyboard())



@router.callback_query(lambda c: c.data == "settings_photo_format")
async def choose_photo_format(callback: types.CallbackQuery):
    """–í—ã–≤–æ–¥ —Å–ø–∏—Å–∫–∞ —Ñ–æ—Ä–º–∞—Ç–æ–≤ —Ñ–æ—Ç–æ"""
    await callback.message.edit_text("üìè –í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ä–º–∞—Ç —Ñ–æ—Ç–æ:", reply_markup=photo_format_keyboard())
    await callback.answer()


@router.callback_query(lambda c: c.data.startswith("set_photo_format_"))
async def handle_photo_format_selection(callback: types.CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ñ–æ—Ä–º–∞—Ç–∞ —Ñ–æ—Ç–æ"""
    selected_format = callback.data.split("_")[-1]  # –¢–µ–ø–µ—Ä—å —Ñ–æ—Ä–º–∞—Ç –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ
    user_id = callback.from_user.id

    try:
        await api_client.set_photo_format(user_id, selected_format)
        await callback.message.edit_text(f"‚úÖ –ü—Ä–∏–Ω—è—Ç–æ! –°–ª–µ–¥—É—é—â–∏–µ —Ñ–æ—Ç–æ –±—É–¥—É—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ {selected_format}.")
    except Exception as e:
        await callback.message.edit_text(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ —Ñ–æ—Ä–º–∞—Ç–∞: {e}")

    await callback.answer()

