# bot/keyboards/inline.py

from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton


def gender_selection_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –ø–æ–ª–∞"""
    buttons = [
        [InlineKeyboardButton(text="üë® –ú—É–∂—á–∏–Ω–∞", callback_data="avatar_gender_male")],
        [InlineKeyboardButton(text="üë© –ñ–µ–Ω—â–∏–Ω–∞", callback_data="avatar_gender_female")],
        [InlineKeyboardButton(text="üë∂ –†–µ–±–µ–Ω–æ–∫", callback_data="avatar_gender_child")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)


def get_categories_keyboard(categories):
    """–°–æ–∑–¥–∞–µ—Ç inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π"""
    buttons = [
        [InlineKeyboardButton(text=category["name"], callback_data=f"category_{category['id']}")]
        for category in categories
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)


def get_styles_keyboard(styles, category_id=None):
    """–°–æ–∑–¥–∞–µ—Ç inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å—Ç–∏–ª–µ–π"""
    filtered_styles = [style for style in styles if category_id is None or style["category"] == category_id]
    
    buttons = [
        [InlineKeyboardButton(text=style["name"], callback_data=f"generate_{style['id']}")]
        for style in filtered_styles
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)


def god_mode_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤–∫–ª—é—á–µ–Ω–∏—è/–≤—ã–∫–ª—é—á–µ–Ω–∏—è —Ä–µ–∂–∏–º–∞ '–ë–æ–≥–∞'"""
    buttons = [
        [InlineKeyboardButton(text="üîÆ –í–∫–ª—é—á–∏—Ç—å —Ä–µ–∂–∏–º –ë–æ–≥–∞", callback_data="godmode_enable")],
        [InlineKeyboardButton(text="‚ùå –í—ã–∫–ª—é—á–∏—Ç—å —Ä–µ–∂–∏–º –ë–æ–≥–∞", callback_data="godmode_disable")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)


def get_payment_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ –ø–∞–∫–µ—Ç–æ–≤ –≥–µ–Ω–µ—Ä–∞—Ü–∏–π"""
    packages = [
        {"id": 1, "name": "–ü—Ä–æ–±–Ω—ã–π", "price": 199, "generations": 10},
        {"id": 2, "name": "–°—Ç–∞—Ä—Ç", "price": 499, "generations": 15},
        {"id": 3, "name": "–°—Ç–∞–Ω–¥–∞—Ä—Ç", "price": 1999, "generations": 30},
        {"id": 4, "name": "–ü—Ä–µ–º–∏—É–º", "price": 2999, "generations": 60},
    ]

    buttons = [
        [InlineKeyboardButton(text=f"{pkg['name']} - {pkg['price']} —Ä—É–±.", callback_data=f"buy_{pkg['id']}")]
        for pkg in packages
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)


def profile_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø—Ä–æ—Ñ–∏–ª—è"""
    buttons = [
        [InlineKeyboardButton(text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å", callback_data="profile_refresh")],
        [InlineKeyboardButton(text="üí∞ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏", callback_data="menu_buy")],
        [InlineKeyboardButton(text="‚öô –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="menu_settings")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)


PHOTO_FORMATS = {
    "1:1": "1x1",
    "3:4": "3x4",
    "9:16": "9x16",
    "16:9": "16x9"
}

def settings_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —Ñ–æ—Ä–º–∞—Ç–∞ —Ñ–æ—Ç–æ"""
    buttons = [
        [InlineKeyboardButton(text=format_option, callback_data=f"settings_{PHOTO_FORMATS[format_option]}")]
        for format_option in PHOTO_FORMATS.keys()
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)



SUPPORT_USERNAME = "your_support_username"  # –£–∫–∞–∂–∏—Ç–µ username —Å–ª—É–∂–±—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏

def support_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏"""
    buttons = [
        [InlineKeyboardButton(text="üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π", url=f"https://t.me/{SUPPORT_USERNAME}")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)


def start_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º"""
    buttons = [
        [InlineKeyboardButton(text="üõí –ö—É–ø–∏—Ç—å", callback_data="start_buy")],
        [InlineKeyboardButton(text="‚Ñπ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è", callback_data="start_instruction")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)


def pay_keyboard(payment_url):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ–ø–ª–∞—Ç—ã"""
    button = InlineKeyboardButton(text="üí≥ –û–ø–ª–∞—Ç–∏—Ç—å", url=payment_url)
    return InlineKeyboardMarkup(inline_keyboard=[[button]])